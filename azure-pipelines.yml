trigger:
  - main

variables:
  - group: "common"
  - name: FIRST_IMAGE_NAME
    value: pomotracker
  - name: SECOND_IMAGE_NAME
    value: pomotracker-nginx
  - name: DOCKER_COMPOSE_FILE
    value: docker-compose.prod.yaml

pool: mycomputeragent


stages:
  - stage: Build
    jobs:
      - job: Build
        displayName: Build docker images and push to docker hub
        steps:
          - task: Docker@2
            displayName: Build and push pomotracker docker image
            inputs:
              containerRegistry: '$(CR_SERVICE_CONNECTION)'
              repository: '$(DOCKER_REPO)/$(FIRST_IMAGE_NAME)'
              command: 'buildAndPush'
              Dockerfile: '**/Dockerfile'
              tags: |
                $(Build.BuildId)
                latest

          - task: Docker@2
            displayName: Build and push pomotracker-nginx docker image
            inputs:
              containerRegistry: '$(CR_SERVICE_CONNECTION)'
              repository: '$(DOCKER_REPO)/$(SECOND_IMAGE_NAME)'
              command: 'buildAndPush'
              Dockerfile: '**/nginx/Dockerfile'
              tags: |
                $(Build.BuildId)
                latest

  - stage: Deploy
    jobs:
      - job: Deploy
        displayName: Deploy to VM via ssh
        steps:
          - task: CopyFilesOverSSH@0
            displayName: Copy docker-compose file over ssh
            inputs:
              sshEndpoint: '$(SSH_SERVICE_CONNECTION)'
              contents: '$(DOCKER_COMPOSE_FILE)'
              targetFolder: '/home/azuredevops/pomotracker_build_files'
              readyTimeout: '20000'
              failOnEmptySource: true

          - task: SSH@0
            displayName: Run docker-compose up
            inputs:
              sshEndpoint: '$(SSH_SERVICE_CONNECTION)'
              runOptions: 'commands'
              commands: |
                docker compose -f /home/azuredevops/pomotracker_build_files/docker-compose.prod.yaml down
                docker compose -f /home/azuredevops/pomotracker_build_files/docker-compose.prod.yaml up -d